var documenterSearchIndex = {"docs":
[{"location":"functions/#Functions","page":"Functions","title":"Functions","text":"","category":"section"},{"location":"functions/#SmoothApproximations.approx_step-Tuple{}","page":"Functions","title":"SmoothApproximations.approx_step","text":"approx_step(; from=0, to=1, at=0, k=10)\n\nApproximate a step function that makes the jump from –> to at point at. The approximation uses a hyperbolic tangent function with steepness parameter k.\n\n\n\n\n\n","category":"method"},{"location":"functions/#SmoothApproximations.majorize_max-Tuple{Any, Any}","page":"Functions","title":"SmoothApproximations.majorize_max","text":"majorize_max(f, val; k=10)\n\nSmooth majorization of x -> max(f(x), val) where f is a smooth function and val is a constant.\n\n\n\n\n\n","category":"method"},{"location":"functions/#SmoothApproximations.majorize_min-Tuple{Any, Any}","page":"Functions","title":"SmoothApproximations.majorize_min","text":"majorize_min(f, val; k=10)\n\nSmooth majorization of x -> min(f(x), val) where f is a smooth function and val is a constant.\n\n\n\n\n\n","category":"method"},{"location":"functions/#SmoothApproximations.majorize_step_down-Tuple{}","page":"Functions","title":"SmoothApproximations.majorize_step_down","text":"majorize_step_up(; from=0, to=1, at=0, k=10)\n\nMajorize a step function that makes the jump from –> to at point at. The majorization uses a hyperbolic tangent function with steepness parameter k.  It's equivalent to approx_step with a shifted to parameter to ensure majorization.\n\n\n\n\n\n","category":"method"},{"location":"functions/#SmoothApproximations.majorize_step_up-Tuple{}","page":"Functions","title":"SmoothApproximations.majorize_step_up","text":"majorize_step_up(; from=0, to=1, at=0, k=10)\n\nMajorize a step function that makes the jump from –> to at point at. The majorization uses a hyperbolic tangent function with steepness parameter k.  It's equivalent to approx_step with a shifted to parameter to ensure majorization.\n\n\n\n\n\n","category":"method"},{"location":"functions/#SmoothApproximations.minorize_max-Tuple{Any, Any}","page":"Functions","title":"SmoothApproximations.minorize_max","text":"minorize_max(f, val; k=10)\n\nSmooth minorization of x -> max(f(x), val) where f is a smooth function and val is a constant.\n\n\n\n\n\n","category":"method"},{"location":"functions/#SmoothApproximations.minorize_min-Tuple{Any, Any}","page":"Functions","title":"SmoothApproximations.minorize_min","text":"minorize_min(f, val; k=10)\n\nSmooth minorization of x -> min(f(x), val) where f is a smooth function and val is a constant.\n\n\n\n\n\n","category":"method"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/#Approximate-[Heaviside-Function](https://en.wikipedia.org/wiki/Heaviside_step_function)","page":"Examples","title":"Approximate Heaviside Function","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"f = x -> float(x > 0)  # hide\nexample(x, \"x -> (x > 0)\" => f.(x), (\"k=$k\" => approx_step(; k).(x) for k in [1, 5, 10])...; title=\"x -> (x > 0) ≈ approx_step(; k=k)\")  # hide","category":"page"},{"location":"examples/#Approximate-If-Else","page":"Examples","title":"Approximate If-Else","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"f = x -> x > 1 ? 2 : 5  # hide\nexample(x, \"x -> (x > 1 ? 5 : 2)\" => f.(x), (\"k=$k\" => approx_step(; k, at=1, from=5, to=2).(x) for k in [1, 5, 10])...; title=\"x -> (x > 1 ? 5 : 2) ≈ approx_step(; k, at=1, from=5, to=2)\")  # hide","category":"page"},{"location":"examples/#Majorize-If-Else","page":"Examples","title":"Majorize If-Else","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"f = x -> x > 0.5 ? 1 : -1  # hide\nexample(x, \"x -> (x > 0.5 ? 1 : -1)\" => f.(x), (\"k=$k\" => majorize_step_up(; k, at=0.5, from=-1, to=1).(x) for k in [1, 5, 10])...; title=\"x -> (x > 0.5 ? 1 : -1) ≈ majorize_step_up(; k, at=0.5, from=-1, to=1)\")  # hide","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"f = x -> x > 0.5 ? -1 : 1  # hide\nexample(x, \"x -> (x > 0.5 ? -1 : 1)\" => f.(x), (\"k=$k\" => majorize_step_down(; k, at=0.5, from=1, to=-1).(x) for k in [1, 5, 10])...; title=\"x -> (x > 0.5 ? -1 : 1) ≈ majorize_step_down(; k, at=0.5, from=1, to=-1)\")  # hide","category":"page"},{"location":"examples/#Majorize-Max","page":"Examples","title":"Majorize Max","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"f = x -> max(x, 1)  # hide\nexample(x, \"x -> max(x, 1)\" => f.(x), (\"k=$k\" => majorize_max(identity, 1; k).(x) for k in [1,5,10])...; title=\"x -> max(x, 1) ≈ majorize_max(identity, 1; k)\")  # hide","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"f = x -> max(x ^ 2, 1)  # hide\nexample(x, \"x -> max(x ^ 2, 1)\" => f.(x), (\"k=$k\" => majorize_max(x -> x^2, 1; k).(x) for k in [1,5,10])...; title=\"x -> max(x^2, 1) ≈ majorize_max(x -> x^2, 1; k)\")  # hide","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"note: Note\nIn order for the approximation to be smooth, majorize_max(f) requires f to be a smooth function.","category":"page"},{"location":"examples/#Minorize-Max","page":"Examples","title":"Minorize Max","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"f = x -> max(x, 1)  # hide\nexample(x, \"x -> max(x, 1)\" => f.(x), (\"k=$k\" => minorize_max(identity, 1; k).(x) for k in [1,5,10])...; title=\"x -> max(x, 1) ≈ minorize_max(identity, 1; k)\")  # hide","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"f = x -> max(x ^ 2, 1)  # hide\nexample(x, \"x -> max(x ^ 2, 1)\" => f.(x), (\"k=$k\" => minorize_max(x -> x^2, 1; k).(x) for k in [1,5,10])...; title=\"x -> max(x^2, 1) ≈ minorize_max(x -> x^2, 1; k)\")  # hide","category":"page"},{"location":"examples/#Minorize-Min","page":"Examples","title":"Minorize Min","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"f = x -> min(x, 1)  # hide\nexample(x, \"x -> min(x, 1)\" => f.(x), (\"k=$k\" => minorize_min(identity, 1; k).(x) for k in [1,5,10])...; title=\"x -> min(x, 1) ≈ minorize_min(identity, 1; k)\")   # hide","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"f = x -> min(x ^ 2, 1)  # hide\nexample(x, \"x -> min(x ^ 2, 1)\" => f.(x), (\"k=$k\" => minorize_min(x -> x^2, 1; k).(x) for k in [1,5,10])...; title=\"x -> min(x^2, 1) ≈ minorize_min(x -> x^2, 1; k)\")  # hide","category":"page"},{"location":"examples/#Majorize-Min","page":"Examples","title":"Majorize Min","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"f = x -> min(x, 1)  # hide\nexample(x, \"x -> min(x, 1)\" => f.(x), (\"k=$k\" => majorize_min(identity, 1; k).(x) for k in [1,5,10])...; title=\"x -> min(x, 1) ≈ majorize_min(identity, 1; k)\")   # hide","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"f = x -> min(x ^ 2, 1)  # hide\nexample(x, \"x -> min(x ^ 2, 1)\" => f.(x), (\"k=$k\" => majorize_min(x -> x^2, 1; k).(x) for k in [1,5,10])...; title=\"x -> min(x^2, 1) ≈ majorize_min(x -> x^2, 1; k)\")  # hide","category":"page"},{"location":"#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"SmoothApproximations provides smooth (infinitely differentiable) approximations to common function that have discontinuities.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"note: Note\nFunctions provided in SmoothApproximations return another function, e.g.    using SmoothApproximations\n\n    f = majorize_min(identity, 1; k=15)\n\n    f(0.7)","category":"page"},{"location":"#Kinds-of-Approximations","page":"Introduction","title":"Kinds of Approximations","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"This package contains three kinds of function approximations, denoted with a prefix:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"approx_\nmajorize_\nminorize_","category":"page"},{"location":"#Approximation-(approx_)","page":"Introduction","title":"Approximation (approx_)","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Functions that begin with approx_ have no guarantees other than infinite differentiability.\nDepending on the input, the approximation may evaluate to a value either smaller or larger than that of the original function.","category":"page"},{"location":"#Majorization-(majorize_)","page":"Introduction","title":"Majorization (majorize_)","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"A function g(x) is said to majorize f(x) over domain D if f(x)  g(x) for all x in D.\nIn other words, majorize_ functions are guaranteed to be larger than or equal to the original function.","category":"page"},{"location":"#Minorization-(minorize_)","page":"Introduction","title":"Minorization (minorize_)","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"A function g(x) is said to minorize f(x)) over domain D if f(x)  g(x) for all x in D.\nIn other words, minorize_ functions are guaranteed to be smaller than or equal to the original function.","category":"page"}]
}
